---
import type { CollectionEntry } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';
import ThemeToggle from '../components/ThemeToggle.astro';

type Props = CollectionEntry<'blog'>['data'];

const { title, description, pubDate, updatedDate, heroImage } = Astro.props;
---

<html lang="en">
	<!-- BlogPost layout -->
	<head>
		<BaseHead title={title} description={description} />
		<style>
			main {
				width: calc(100% - 2em);
				max-width: 100ch;
				margin: 0 auto;
			}
			.hero-image {
				width: 100%;
			}
			.hero-image img {
				display: block;
				margin: 0 auto;
				border-radius: 12px;
				box-shadow: var(--box-shadow);
				width: 100%;
				height: 480px;  /* Fixed height for hero images */
				object-fit: cover;
				object-position: center;
			}
			.prose {
				width: 720px;
				max-width: calc(100% - 2em);
				margin: auto;
				padding: 1em;
				color: rgb(var(--gray-dark));
			}
			.title {
				margin-bottom: 1em;
				padding: 1em 0;
				text-align: center;
				line-height: 1;
			}
			.title h1 {
				margin: 0 0 0.5em 0;
			}
			.date {
				margin-bottom: 0.5em;
				color: rgb(var(--gray));
			}
			.last-updated-on {
				font-style: italic;
			}
			.theme-toggle-wrapper {
				position: relative;
				min-height: 100vh;
			}
			.hero-img.top {
				object-position: center top !important;
			}
			.hero-img.bottom {
				object-position: center bottom !important;
			}
			.hero-img.left {
				object-position: left center !important;
			}
			.hero-img.right {
				object-position: right center !important;
			}
			/* Custom positions for specific images */
			.hero-img.text-based-rpg {
				object-position: 25% 75% !important;
			}
			/* Custom positions for specific images */
			.hero-img.doodle {
				object-position: 25% 0% !important;
			}
		</style>
	</head>

	<body>
		<div class="theme-toggle-wrapper">
			<Header />
			<main>
				<article>
					{heroImage && (
						<div class="hero-image">
							<img 
								width={1020} 
								height={510} 
								src={heroImage} 
								alt="" 
								class={`hero-img ${heroImage.split('/').pop()?.split('.')[0]}`}
							/>
						</div>
					)}
					<div class="prose">
						<div class="title">
							<div class="date">
								<FormattedDate date={pubDate} />
								{
									updatedDate && (
										<div class="last-updated-on">
											Last updated on <FormattedDate date={updatedDate} />
										</div>
									)
								}
							</div>
							<h1>{title}</h1>
							<hr />
						</div>
						<slot />
					</div>
				</article>
			</main>
			<Footer />
			<ThemeToggle />
		</div>
	</body>
</html>
