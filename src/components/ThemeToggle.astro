<div class="theme-toggle-container">
    <button id="themeToggle" aria-label="Toggle dark mode">
        <svg width="30px" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
            <path class="sun" fill-rule="evenodd" d="M12 17.5a5.5 5.5 0 1 0 0-11 5.5 5.5 0 0 0 0 11zm0 1.5a7 7 0 1 0 0-14 7 7 0 0 0 0 14zm12-7a.8.8 0 0 1-.8.8h-2.4a.8.8 0 0 1 0-1.6h2.4a.8.8 0 0 1 .8.8zM4 12a.8.8 0 0 1-.8.8H.8a.8.8 0 0 1 0-1.6h2.5a.8.8 0 0 1 .8.8zm16.5-8.5a.8.8 0 0 1 0 1l-1.8 1.8a.8.8 0 0 1-1-1l1.7-1.8a.8.8 0 0 1 1 0zM6.3 17.7a.8.8 0 0 1 0 1l-1.7 1.8a.8.8 0 1 1-1-1l1.7-1.8a.8.8 0 0 1 1 0zM12 0a.8.8 0 0 1 .8.8v2.5a.8.8 0 0 1-1.6 0V.8A.8.8 0 0 1 12 0zm0 20a.8.8 0 0 1 .8.8v2.4a.8.8 0 0 1-1.6 0v-2.4a.8.8 0 0 1 .8-.8zM3.5 3.5a.8.8 0 0 1 1 0l1.8 1.8a.8.8 0 1 1-1 1L3.5 4.6a.8.8 0 0 1 0-1zm14.2 14.2a.8.8 0 0 1 1 0l1.8 1.7a.8.8 0 0 1-1 1l-1.8-1.7a.8.8 0 0 1 0-1z"/>
            <path class="moon" fill-rule="evenodd" d="M16.5 6A10.5 10.5 0 0 1 4.7 16.4 8.5 8.5 0 1 0 16.4 4.7l.1 1.3zm-1.7-2a9 9 0 0 1 .2 2 9 9 0 0 1-11 8.8 9.4 9.4 0 0 1-.8-.3c-.4 0-.8.3-.7.7a10 10 0 0 0 .3.8 10 10 0 0 0 9.2 6 10 10 0 0 0 4-19.2 9.7 9.7 0 0 0-.9-.3c-.3-.1-.7.3-.6.7a9 9 0 0 1 .3.8z"/>
        </svg>
    </button>
</div>

<style>
    .theme-toggle-container {
        position: fixed;
        bottom: 1.5rem;
        right: 1.5rem;
        z-index: 99999;
    }

    #themeToggle {
        border: 0;
        background: rgba(var(--gray-light), 0.3);
        backdrop-filter: blur(5px);
        padding: 0.5em;
        cursor: pointer;
        border-radius: 50%;
        width: 44px;
        height: 44px;
        display: flex;
        align-items: center;
        justify-content: center;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
    }

    .theme-toggle-container {
        background: transparent;
        padding: 0;
        border: none;
    }

    .sun { fill: black; }
    .moon { fill: transparent; }

    :global(.dark) .sun { fill: transparent; }
    :global(.dark) .moon { fill: white; }

    :global(.dark) #themeToggle {
        background: rgba(0, 0, 0, 0.4);
    }
</style>

<script>
    // Only initialize if not already initialized
    if (!window.themeToggleInitialized) {
        window.themeToggleInitialized = true;

        const theme = (() => {
            if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
                return localStorage.getItem('theme') || 'light';
            }
            if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
                return 'dark';
            }
            return 'light';
        })();

        // Initial theme setup
        if (theme === 'light') {
            document.body.classList.remove('dark');
        } else {
            document.body.classList.add('dark');
        }

        window.localStorage.setItem('theme', theme);

        // Handle toggle click
        const handleToggleClick = () => {
            const element = document.body;  // Changed from documentElement to body
            const isDark = element.classList.contains("dark");
            console.log('Current theme:', isDark ? 'dark' : 'light');
            
            // Toggle the class
            element.classList.toggle("dark");
            
            // Update localStorage
            localStorage.setItem("theme", isDark ? "light" : "dark");
            console.log('Switched to:', isDark ? 'light' : 'dark');
        }

        // Add click listener to all theme toggle buttons
        document.querySelectorAll('#themeToggle').forEach(button => {
            button.addEventListener("click", handleToggleClick);
        });
    }
</script> 